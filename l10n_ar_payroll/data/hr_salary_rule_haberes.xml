<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <!-- Rules: Sueldo Basico -->
        <record id="rules_BASIC" model="hr.salary.rule">
            <field name="name">SUELDO BASICO</field>
            <field name="code">10101</field>
            <field name="sequence">10101</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931BASIC" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">none</field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
try:
    amount = contract.cct_category_id.get_category_value(payslip.date_from, payslip.date_to)
except:
    amount = contract.amount
if contract.is_wage_accurate:
    result = amount / worked_days.WORK100.number_of_days
    result_qty = worked_days.WORK100.number_of_days
else:
    result = amount
    result_qty = worked_days.WORK100.number_of_hours
            </field>
        </record>
        <!-- Rules: Feriados no trabajados (Jornalizados)  -->
        <record id="rules_HFRD" model="hr.salary.rule">
            <field name="name">FERIADOS - no trabajados</field>
            <field name="code">10102</field>
            <field name="sequence">10102</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931BASIC" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = (worked_days.HFRD and worked_days.HFRD.number_of_days and (not contract.is_wage_accurate)) or False
            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result_qty = worked_days.HFRD.number_of_hours
try:
    result = contract.cct_category_id.get_category_value(payslip.date_from, payslip.date_to)
except:
    result = contract.amount
            </field>
        </record>
        <!-- Rules: Plus Feriado (Mensualizados)  -->
        <record id="rules_HFRD_PLUS" model="hr.salary.rule">
            <field name="name">PLUS FERIADO - no trabajados</field>
            <field name="code">10103</field>
            <field name="sequence">10103</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931BASIC" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = (worked_days.HFRD and worked_days.HFRD.number_of_days and contract.is_wage_accurate) or False
            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
try:
    amount = contract.cct_category_id.get_category_value(payslip.date_from, payslip.date_to)
except:
    amount = contract.amount
result_qty = worked_days.HFRD.number_of_days
result = (amount / 25) - (amount / 30)
            </field>
        </record>
        <!-- Rules: Vacaciones -->
        <record id="rules_VAC" model="hr.salary.rule">
            <field name="name">VACACIONES</field>
            <field name="code">10110</field>
            <field name="sequence">10110</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931VAC" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = (worked_days.VACDAYS and worked_days.VACDAYS.number_of_days) or False
            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
try:
    amount = contract.cct_category_id.get_category_value(payslip.date_from, payslip.date_to)
except:
    amount = contract.amount
if contract.is_wage_accurate:
    result = amount / 25
    result_qty = worked_days.VACDAYS.number_of_days
else:
    result = amount
    result_qty = worked_days.VACDAYS.number_of_hours
            </field>
        </record>
        <!-- Rules: Pago Ausentismo ILT -->
        <record id="rules_ILT" model="hr.salary.rule">
            <field name="name">ILT - Incapacidad Laboral Temporaria</field>
            <field name="code">10120</field>
            <field name="sequence">10120</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931BASIC" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = worked_days.WORK0ILT and 0 > worked_days.WORK0ILT.number_of_hours
                </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result_qty = 0
try:
    amount = contract.cct_category_id.get_category_value(payslip.date_from, payslip.date_to)
except:
    amount = contract.amount
if contract.is_wage_accurate:
    result = amount / worked_days.WORK100.number_of_days
    if worked_days.WORK0ILT:
        result_qty += worked_days.WORK0ILT.number_of_days * -1
else:
    result = amount
    if worked_days.WORK0ILT:
        result_qty += worked_days.WORK0ILT.number_of_hours * -1
            </field>
        </record>
        <record id="rules_SAC" model="hr.salary.rule">
            <field name="name">S.A.C - Sueldo Anual Complementario</field>
            <field name="code">10130</field>
            <field name="sequence">10130</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931SAC" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">none</field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = ((inputs.SACBASE / 2) / 180) * inputs.SACDAYS
            </field>
        </record>
        <!-- Rules: Feriado Trabajado  -->
        <record id="rules_HFRD_TRAB" model="hr.salary.rule">
            <field name="name">FERIADOS - trabajados</field>
            <field name="code">10201</field>
            <field name="sequence">10201</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931EXT" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = (worked_days.OVT100FE and worked_days.OVT100FE.number_of_hours) or False
            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result_rate = 200.00
try:
    amount = contract.cct_category_id.get_category_value(payslip.date_from, payslip.date_to)
except:
    amount = contract.amount
if contract.is_wage_accurate:
    result = amount / 25
    result_qty = worked_days.OVT100FE.number_of_days
else:
    result = amount
    result_qty = worked_days.OVT100FE.number_of_hours
            </field>
        </record>
        <!-- Rules: Horas Extra al 50% -->
        <record id="rules_OVT50" model="hr.salary.rule">
            <field name="name">HORAS EXTRA - al 50%</field>
            <field name="code">10202</field>
            <field name="sequence">10202</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931EXT" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = (worked_days and worked_days.OVT50 and worked_days.OVT50.number_of_hours) or False
            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result_rate = 150.00
try:
    amount = contract.cct_category_id.get_category_value(payslip.date_from, payslip.date_to)
except:
    amount = contract.amount
if contract.is_wage_accurate:
    result = amount / worked_days.WORK100.number_of_hours
    result_qty = worked_days.OVT50.number_of_hours
else:
    result = amount
    result_qty = worked_days.OVT50.number_of_hours
            </field>
        </record>
        <!-- Rules: Horas Extra al 100% -->
        <record id="rules_OVT100" model="hr.salary.rule">
            <field name="name">HORAS EXTRA - al 100%</field>
            <field name="code">10203</field>
            <field name="sequence">10203</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931EXT" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = (worked_days and worked_days.OVT100 and worked_days.OVT100.number_of_hours) or False
            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result_rate = 200.00
try:
    amount = contract.cct_category_id.get_category_value(payslip.date_from, payslip.date_to)
except:
    amount = contract.amount
if contract.is_wage_accurate:
    result = amount / worked_days.WORK100.number_of_hours
    result_qty = worked_days.OVT100.number_of_hours
else:
    result = amount
    result_qty = worked_days.OVT100.number_of_hours
            </field>
        </record>
        <!-- Rules: LCT Antiguedad -->
        <record id="rules_ANTG" model="hr.salary.rule">
            <field name="name">ANTIGUEDAD LCT</field>
            <field name="code">10501</field>
            <field name="sequence">10501</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931ADIC" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">range</field>
            <field name="condition_range">employee.service_duration_years</field>
            <field name="condition_range_min">1</field>
            <field name="condition_range_max">999</field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result_rate = 1.00
result_qty = employee.service_duration_years
result = categories.BASIC931
            </field>
        </record>
        <!-- Rules: Premio Presentismo -->
        <record id="rules_PRES" model="hr.salary.rule">
            <field name="name">PREMIO PRESENTISMO</field>
            <field name="code">10550</field>
            <field name="sequence">10550</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931PREM" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = ( not (worked_days.WORK0HOL and - 1 >= worked_days.WORK0HOL.number_of_days)) and ( not (worked_days.WORK0 and -1 >= worked_days.WORK0.number_of_days)) or inputs.PRESOVR.amount != 0.00 or False            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
if (inputs.PRESOVR.amount > 0):
    result = inputs.PRESOVR.amount
else:
    if contract.schedule_pay == 'bi-weekly':
        result = 2500.00
    elif contract.schedule_pay == 'monthly':
        result = 5000.00
            </field> <!-- TODO: Se debe poner un parametro para el monto de presentismo. -->
        </record>
        <record id="payslip_inputs_PRES-OVR" model="hr.rule.input">
            <field name="name">Presentismo (Override)</field>
            <field name="code">PRESOVR</field>
            <field name="input_id" ref="l10n_ar_payroll.rules_PRES" />
        </record>
    </data>
</odoo>
