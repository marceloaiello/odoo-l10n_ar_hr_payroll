<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <record id="rules_BASIC_HOURS" model="hr.salary.rule">
            <field name="name">HORAS NORMALES</field>
            <field name="code">10100</field>
            <field name="sequence">10100</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931BASIC" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">none</field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result_qty = worked_days.WORK100.number_of_hours
if contract.aplica_cct:
    result = contract.cct_category_id.get_category_value(payslip.date_from, payslip.date_to)
else:
    result = contract.amount
            </field>
            <!-- TODO: Eventually we need to net public holidays from the worked days function -->
        </record>
        <record id="rules_BASIC" model="hr.salary.rule">
            <field name="name">SUELDO BASICO</field>
            <field name="code">10100</field>
            <field name="sequence">10100</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931BASIC" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">none</field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result_qty = worked_days.WORK100.number_of_days
if contract.aplica_cct:
    result = contract.cct_category_id.get_category_value(payslip.date_from, payslip.date_to) / worked_days.WORK100.number_of_days
else:
    result = contract.amount / worked_days.WORK100.number_of_days
            </field>
            <!-- TODO: Eventually we need to net public holidays from the worked days function -->
        </record>
        <record id="rules_HFRD" model="hr.salary.rule">
            <field name="name">FERIADOS</field>
            <field name="code">10105</field>
            <field name="sequence">10105</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931BASIC" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = (worked_days and worked_days.HFRD and worked_days.HFRD.number_of_days) or False
            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
if contract.is_wage_accurate:
    result_qty = worked_days.HFRD.number_of_days
    result = contract.wage / worked_days.WORK100.number_of_days
else:
    result_qty = worked_days.HFRD.number_of_hours
    result = contract.amount
            </field>
        </record>
        <record id="rules_AUS" model="hr.salary.rule">
            <field name="name">AUSENTISMO</field>
            <field name="code">10109</field>
            <field name="sequence">10109</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931BASIC" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = (worked_days and worked_days.WORK0 and worked_days.WORK0.number_of_hours) or False
            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
if not contract.is_wage_accurate:
    result_qty = -(worked_days.WORK0.number_of_hours)
    result = contract.amount
else:
    result_qty = -(worked_days.WORK0.number_of_days)
    result = contract.wage / worked_days.WORK100.number_of_days
            </field>
        </record>
        <record id="rules_OVT50" model="hr.salary.rule">
            <field name="name">HORAS EXTRA AL 50%</field>
            <field name="code">10120</field>
            <field name="sequence">10120</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931EXT" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = (worked_days and worked_days.OVT50 and worked_days.OVT50.number_of_hours) or False
            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result_rate = 150.00
if not contract.is_wage_accurate:
    result_qty = worked_days.OVT50.number_of_hours
    result = contract.amount
else:
    result_qty = worked_days.OVT50.number_of_hours
    result = (contract.wage / worked_days.WORK100.number_of_hours)
            </field>
        </record>
        <record id="rules_OVT100" model="hr.salary.rule">
            <field name="name">HORAS EXTRA AL 100%</field>
            <field name="code">10121</field>
            <field name="sequence">10121</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931EXT" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = (worked_days and worked_days.OVT100 and worked_days.OVT100.number_of_hours) or False
            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result_rate = 200.00
if not contract.is_wage_accurate:
    result_qty = worked_days.OVT100.number_of_hours
    result = contract.amount
else:
    result_qty = worked_days.OVT100.number_of_hours
    result = (contract.wage / worked_days.WORK100.number_of_hours)
            </field>
        </record>
        <record id="rules_ANTG" model="hr.salary.rule">
            <field name="name">ANTIGUEDAD</field>
            <field name="code">10301</field>
            <field name="sequence">10301</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931ADIC" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">range</field>
            <field name="condition_range">employee.service_duration_years</field>
            <field name="condition_range_min">1</field>
            <field name="condition_range_max">999</field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result_rate = 1.00
result_qty = employee.service_duration_years
result = categories.BASIC931
            </field>
        </record>
        <record id="rules_PRES" model="hr.salary.rule">
            <field name="name">PREMIO PRESENTISMO (M)</field>
            <field name="code">10320</field>
            <field name="sequence">10320</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931PREM" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = (not contract.schedule_pay == 'monthly' and not worked_days.WORK0 and not worked_days.WORK0 >= 1 and not inputs.PRES-OVR != 0.00) or False
            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = contract.env['hr.contract.advantage'].search([('contract_id', '=', contract.id), ('code', '=', 'PREM-PRES-M')]).amount
            </field>
        </record>
        <record id="payslip_inputs_PRES-OVR" model="hr.rule.input">
            <field name="name">Presentismo (Override)</field>
            <field name="code">PRES-OVR</field>
            <field name="input_id" ref="l10n_ar_payroll.rules_PRES" />
        </record>
        <record id="rules_PRES_Q" model="hr.salary.rule">
            <field name="name">PREMIO PRESENTISMO (Q)</field>
            <field name="code">10320</field>
            <field name="sequence">10251</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_931PREM" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = (not contract.schedule_pay == 'bi-weekly' and not worked_days.WORK0 and not worked_days.WORK0 >= 1 and not inputs.PRES-OVR != 0.00) or False
            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = contract.env['hr.contract.advantage'].search([('contract_id', '=', contract.id), ('code', '=', 'PREM-PRES-Q')]).amount
            </field>
        </record>
        <record id="payslip_inputs_PRES-OVR2" model="hr.rule.input">
            <field name="name">Presentismo (Override)</field>
            <field name="code">PRES-OVR</field>
            <field name="input_id" ref="l10n_ar_payroll.rules_PRES_Q" />
        </record>
        <record id="rules_AFIP-JUB11" model="hr.salary.rule">
            <field name="name">APORTES JUBILATORIOS</field>
            <field name="code">20100</field>
            <field name="sequence">20100</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_RET" />
            <field name="register_id" ref="l10n_ar_payroll.contribution_register_AFIP-JUB" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">none</field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result_rate = -11.00
result = categories.GROSS
            </field>
        </record>
        <record id="rules_AFIP-INSSJP3" model="hr.salary.rule">
            <field name="name">LEY 19.032 - INSSJP</field>
            <field name="code">20101</field>
            <field name="sequence">20101</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_RET" />
            <field name="register_id" ref="l10n_ar_payroll.contribution_register_AFIP-INSSJP" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">none</field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result_rate = -3.00
result = categories.GROSS
            </field>
        </record>
        <record id="rules_AFIP-OS3" model="hr.salary.rule">
            <field name="name">APORTES OBRA SOCIAL</field>
            <field name="code">20102</field>
            <field name="sequence">20102</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_RET" />
            <field name="register_id" ref="l10n_ar_payroll.contribution_register_AFIP-OS" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">none</field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result_rate = -3.00
result = categories.GROSS
            </field>
        </record>
        <record id="rules_EMBG-JUD" model="hr.salary.rule">
            <field name="name">EMBARGOS JUDICIALES</field>
            <field name="code">30100</field>
            <field name="sequence">30100</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_DED" />
            <field name="register_id" ref="l10n_ar_payroll.contribution_register_JUD-EMBG" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = payslip.env['hr.contract.advantage'].search([('contract_id', '=', contract.id), ('code', '=', 'EMBR-RATE')])
            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result_rate = -(payslip.env['hr.contract.advantage'].search([('contract_id', '=', contract.id), ('code', '=', 'EMBR-RATE')]).amount)
result = categories.GROSS + categories.DESC + categories.NOREM + categories.RET
            </field>
        </record>
        <record id="rules_ADV" model="hr.salary.rule">
            <field name="name">ADELANTOS OTORGADOS</field>
            <field name="code">30201</field>
            <field name="sequence">30201</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_DED" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = ( inputs.ADV and inputs.ADV.amount != 0.00 ) or False
            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = -(inputs.ADV.amount)
            </field>
        </record>
        <record id="payslip_inputs_ADV-AMOUNT" model="hr.rule.input">
            <field name="name">Importe Adelantos (a descontar)</field>
            <field name="code">ADV</field>
            <field name="input_id" ref="l10n_ar_payroll.rules_ADV" />
        </record>
        <record id="rules_LOAN" model="hr.salary.rule">
            <field name="name">PLANES PRESTAMOS OTORGADOS</field>
            <field name="code">30202</field>
            <field name="sequence">30202</field>
            <field name="category_id" ref="l10n_ar_payroll.categories_DED" />
            <field name="active">true</field>
            <field name="appears_on_payslip">true</field>
            <!-- Condition Select -->
            <field name="condition_select">python</field>
            <field name="condition_python">
result = ( inputs.LOAN and inputs.LOAN.amount != 0.00 ) or False
            </field>
            <!-- Amount Select -->
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
result = -(inputs.LOAN.amount)
            </field>
        </record>
        <record id="payslip_inputs_LOAN-AMOUNT" model="hr.rule.input">
            <field name="name">Importe Prestamos (a descontar)</field>
            <field name="code">LOAN</field>
            <field name="input_id" ref="l10n_ar_payroll.rules_LOAN" />
        </record>
    </data>
</odoo>
